{"version":3,"sources":["images/One-Player.svg","images/Two-Players.svg","images/Three-Players.svg","images/Four-Players.svg","images/Five-Players.svg","images/Group-Players.svg","images/Search.svg","images/Like.svg","images/Unlike.svg","Components/Header.js","Components/NavBar.js","Components/Game.js","Components/LikeButton.js","Components/Location.js","Components/CardArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","NavBar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","status","onClick","foodFilter","drinkFilter","sellerFilter","bringGameFilter","filterFavorites","searchByText","src","search","type","placeholder","onChange","changeCards","playerFilter","onePlayer","alt","twoPlayers","threePlayers","fourPlayers","fivePlayers","groupPlayers","weightFilter","gameTypeFilter","id","Component","Game","image","name","minPlayers","maxPlayers","weight","LikeButton","state","handleClick","bind","assertThisInitialized","toggleFav","isFavorite","like","unlike","Location","value","logo","address","weekdayOpen","weekdayClose","weekendOpen","weekendClose","href","website","Components_LikeButton","CardArea","view","e","target","innerText","setState","_this2","gamesCards","gamesData","map","game","Components_Game","timeToPlay","features","gameId","Components_NavBar","games","locationCards","locationData","location","liked","favorites","includes","Components_Location","hasFood","hasDrinks","sellsGames","googleMapsLink","bringYourOwnGame","gamesOffered","App","locations","players","gameType","filteredGames","filteredLocations","searchInput","filterFilteredCards","filterAllCards","saveToStorage","fetch","then","response","json","boardGames","catch","err","Error","localGameParlours","JSON","parse","localStorage","getItem","newState","_this3","filter","fav","concat","toConsumableArray","toLowerCase","locationByText","setItem","stringify","property","filterGames","length","numOfPlayers","playerInput","filterAllCardsByPlayers","weightInput","undefined","gameTypeInput","filterAllCardsByType","filterFilteredCardsByType","newLocation","_this4","forEach","find","push","cardArea","Components_CardArea","Components_Header","header","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e71fba91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/One-Player.d79dcf2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Two-Players.0deae2d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Three-Players.5730e8cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Four-Players.027f3c36.svg\";","module.exports = __webpack_public_path__ + \"static/media/Five-Players.364f3264.svg\";","module.exports = __webpack_public_path__ + \"static/media/Group-Players.845c643a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.64d25256.svg\";","module.exports = __webpack_public_path__ + \"static/media/Like.e87899ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Unlike.ec622305.svg\";","import React from 'react';\nimport '../scss/Header.scss'\n\nfunction Header() {\n  return (\n    <header>\n      <h1><span className=\"title-style\">Board,</span><br/> not bored.</h1>\n    </header>\n  )\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport App from '../App.js';\nimport '../scss/NavBar.scss'\nimport onePlayer from '../images/One-Player.svg'\nimport twoPlayers from '../images/Two-Players.svg'\nimport threePlayers from '../images/Three-Players.svg'\nimport fourPlayers from '../images/Four-Players.svg'\nimport fivePlayers from '../images/Five-Players.svg'\nimport groupPlayers from '../images/Group-Players.svg'\nimport search from '../images/Search.svg';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    if (this.props.status === \"Locations\") {\n      return (\n        <nav>\n          <ul>\n            <li><button className='locationButton' onClick={ () => this.props.foodFilter() }>Has Food</button></li>\n            <li><button className='locationButton' onClick={ () => this.props.drinkFilter() }>Has Drinks</button></li>\n            <li><button className='locationButton' onClick={ () => this.props.sellerFilter() }>Sells Games</button></li>\n            <li><button className='locationButton' onClick={ () => this.props.bringGameFilter() }>Bring Your Own Game</button></li>\n            <li><button className='locationButton' onClick={ () => this.props.filterFavorites() }>Favorites</button></li>\n          </ul>\n            <section>\n              <button className='magnifyButton' onClick={ this.props.searchByText }><img src={ search }/></button>\n              <input className='searchLocation 'type=\"text\" placeholder=\"Search by Location\" onChange={ this.props.searchByText }/>\n            </section>\n            <button className='changeGames toggle-button' onClick={this.props.changeCards}>Games</button>\n          </nav>\n      )\n    } else {\n      return (\n        <nav>\n          <ul>\n            <li><button onClick={ () => this.props.playerFilter(1) }><img src={ onePlayer } alt=\"One Player Games\" /></button></li>\n            <li><button onClick={ () => this.props.playerFilter(2) }><img src={ twoPlayers } alt=\"Two Player Games\" /></button></li>\n            <li><button onClick={ () => this.props.playerFilter(3) }><img src={ threePlayers } alt=\"Three Player Games\" /></button></li>\n            <li><button onClick={ () => this.props.playerFilter(4) }><img src={ fourPlayers } alt=\"Four Player Games\" /></button></li>\n            <li><button onClick={ () => this.props.playerFilter(5) }><img src={ fivePlayers } alt=\"Five Player Games\" /></button></li>\n            <li><button onClick={ () => this.props.playerFilter(6) }><img src={ groupPlayers } alt=\"Group Player Games\" /></button></li>\n          </ul>\n          <select onChange={ this.props.weightFilter }>\n            <option>Difficulty</option>\n            <option>Light</option>\n            <option>Medium</option>\n            <option>Heavy</option>\n          </select>\n          <select onChange={ this.props.gameTypeFilter }>\n            <option>Type</option>\n            <option>Party</option>\n            <option>Strategy</option>\n            <option>Thematic</option>\n            <option>Children's</option>\n            <option>Family</option>\n            <option>Abstract</option>\n          </select>\n          <button className='location toggle-button' id=\"location\" onClick={ this.props.changeCards }>Locations</button>\n        </nav>\n      )};\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport '../scss/Game.scss'\n\nfunction Game(props) {\n  return (\n    <div className='gameCard' id={props.id}>\n        <img src={props.image} className='gameCardImage' />\n        <div className=\"additionalGameInfo\">\n          <p className=\"text\">{ props.name }</p>\n          <p className=\"text\">Players: { props.minPlayers }-{ props.maxPlayers }</p>\n          <p className=\"text\">Weight: { props.weight }</p>\n          <p className=\"text\">Type: { props.type }</p>\n        </div>\n    </div>\n  )\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport '../scss/LikeButton.scss';\n\nclass LikeButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.toggleFav(this.props.name)\n  }\n\n  render() {\n    return (\n      <div>\n        <img onClick={this.handleClick}\n        src={ this.props.isFavorite ? this.props.like : this.props.unlike }\n        className=\"like-btn\"></img>\n      </div>\n    );\n  }\n}\nexport default LikeButton;\n","import React, { Component } from 'react';\nimport '../scss/Location.scss';\nimport LikeButton from './LikeButton.js'\nimport like from '../images/Like.svg'\nimport unlike from '../images/Unlike.svg'\n\n\n\nfunction Location(props) {\n  return (\n    <div className=\"location-wrapper\">\n      <article className=\"locationCard\" value={ props.name }>\n        <img src={ props.logo } className=\"locationLogo\" />\n        <div className=\"locationInfo\">\n          <h2>{ props.name }</h2>\n          <p>{ props.address }</p>\n          <p>M-F: { props.weekdayOpen }-{ props.weekdayClose }</p>\n          <p>Sa & Su: { props.weekendOpen}-{props.weekendClose }</p>\n          <a href={ props.website }>{ props.website }</a>\n        </div>\n        <LikeButton\n          like={ like }\n          unlike={ unlike }\n          isFavorite={ props.isFavorite }\n          toggleFav={ props.toggleFav }\n          name={ props.name } />\n      </article>\n    </div>\n  )\n}\n\nexport default Location;\n","import React, {Component} from 'react';\nimport NavBar from './NavBar.js'\nimport Game from './Game.js'\nimport Location from './Location.js'\nimport '../scss/CardArea.scss'\n\n\nclass CardArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      view: \"Games\",\n    }\n    this.changeCards = this.changeCards.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.playerFilter(1);\n  }\n\n  changeCards(e){\n    if (e.target.innerText === \"Locations\") {\n      this.setState({ view: \"Locations\" }, function() {\n        this.props.drinkFilter()\n      });\n    } else {\n      this.setState({ view: \"Games\" }, function() {\n    })};\n  }\n\n  render() {\n    if (this.state.view === \"Games\") {\n      let gamesCards =\n      this.props.gamesData.map((game) => {\n        return <Game\n          name={ game.name }\n          minPlayers={ game.minPlayers }\n          maxPlayers={ game.maxPlayers }\n          weight={ game.weight }\n          timeToPlay={ game.timeToPlay }\n          type={ game.type }\n          features={ game.features }\n          image={ game.image }\n          id={ game.gameId }\n          />\n      });\n        return (\n          <div>\n            <NavBar\n              status = { this.state.view }\n              changeCards = { this.changeCards }\n              games={ this.props.gamesData }\n              playerFilter={ this.props.playerFilter }\n              weightFilter={ this.props.weightFilter }\n              gameTypeFilter={ this.props.gameTypeFilter }\n              foodFilter={ this.props.foodFilter }\n              drinkFilter={ this.props.drinkFilter }\n              sellerFilter={ this.props.sellerFilter }\n              bringGameFilter={ this.props.bringGameFilter } \n              />\n            <section className=\"cardContainer\">\n              { gamesCards }\n            </section>\n          </div>\n        )\n    } else {\n      let locationCards =\n      this.props.locationData.map((location) => {\n        let liked;\n        if (this.props.favorites.includes(location.name)) {\n          liked = true;\n        } else {\n          liked = false;\n        }\n        return <Location\n              name={location.name}\n              address = {location.address}\n              website = {location.website}\n              hasFood = {location.hasFood}\n              logo = {location.logo}\n              hasDrinks = {location.hasDrinks}\n              sellsGames = {location.sellsGames}\n              weekdayOpen = {location.weekdayOpen}\n              weekdayClose = {location.weekdayClose}\n              weekendOpen = {location.weekendOpen}\n              weekendClose = {location.weekendClose}\n              googleMapsLink = {location.googleMapsLink}\n              bringYourOwnGame = {location.bringYourOwnGame}\n              gamesOffered = {location.gamesOffered}\n              isFavorite={liked}\n              toggleFav={this.props.toggleFav}\n              />\n      });\n        return (\n          <div>\n            <NavBar\n            status = { this.state.view }\n            changeCards = { this.changeCards }\n            games={ this.props.gamesData }\n            playerFilter={ this.props.playerFilter }\n            weightFilter={ this.props.weightFilter }\n            gameTypeFilter={ this.props.gameTypeFilter }\n            foodFilter={ this.props.foodFilter }\n            drinkFilter={ this.props.drinkFilter }\n            sellerFilter={ this.props.sellerFilter }\n            bringGameFilter={ this.props.bringGameFilter }\n            searchByText={this.props.searchByText }\n            filterFavorites={this.props.filterFavorites }\n             />\n            <section className=\"locationCardContainer\">\n            { locationCards }\n            </section>\n          </div>\n        )\n    }\n  }\n}\n\nexport default CardArea;\n","import React, { Component } from 'react';\nimport Header from './Components/Header.js';\n// import NavBar from './Components/NavBar.js';\nimport CardArea from './Components/CardArea.js';\nimport './scss/App.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      locations: [],\n      games: [],\n      weight: null,\n      players: null,\n      gameType: null,\n      filteredGames: [],\n      filteredLocations: [],\n      searchInput: '',\n      favorites : []\n    }\n\n    this.playerFilter = this.playerFilter.bind(this);\n    this.weightFilter = this.weightFilter.bind(this);\n    this.gameTypeFilter = this.gameTypeFilter.bind(this)\n    this.foodFilter = this.foodFilter.bind(this);\n    this.drinkFilter = this.drinkFilter.bind(this);\n    this.sellerFilter = this.sellerFilter.bind(this);\n    this.bringGameFilter = this.bringGameFilter.bind(this);\n    this.filterFilteredCards = this.filterFilteredCards.bind(this);\n    this.filterAllCards = this.filterAllCards.bind(this);\n    this.searchByText = this.searchByText.bind(this);\n    this.saveToStorage = this.saveToStorage.bind(this);\n    this.toggleFav = this.toggleFav.bind(this);\n    this.filterFavorites = this.filterFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://fe-apps.herokuapp.com/api/v1/whateverly/1901/kobesparrow/boardGames\")\n    .then(response => response.json())\n    .then(gamesData => this.setState({games: gamesData.boardGames}))\n    .catch(err => {\n      throw new Error(err);\n    })\n\n    fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/kobesparrow/localGameParlours')\n      .then(response => response.json())\n      .then(locations => {\n        this.setState({\n          locations: locations.localGameParlours\n        })\n      })\n      .catch(err => {\n        throw new Error(err);\n      })\n      const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      this.setState({\n        favorites: favorites\n      });\n    }\n\n\n  toggleFav(name) {\n    let newState;\n    if (this.state.favorites.includes(name)) {\n      newState = this.state.favorites.filter(fav => fav !== name);\n    } else {\n      newState = [...this.state.favorites, name];\n    }\n    this.setState({\n      favorites : newState\n    }, () => {\n      this.saveToStorage();\n    });\n  }\n\n  searchByText(e) {\n    let search = e.target.value.toLowerCase();\n    let locationByText = this.state.locations.filter(location => {\n      return location.name.toLowerCase().includes(search);\n    });\n    this.setState({\n      filteredLocations: locationByText\n    });\n  }\n\n  saveToStorage() {\n    localStorage.setItem('favorites', JSON.stringify(this.state.favorites));\n  }\n\n  filterAllCards(value, property) {\n    let filterGames = this.state.games.filter(game => {\n      return game[value] === property;\n    });\n    if (filterGames.length > 0) {\n      this.setState({\n        filteredGames: filterGames\n      });    \n    }\n  }\n\n  filterAllCardsByPlayers(property) {\n    let filterGames = this.state.games.filter(game => {\n      return game.minPlayers <= property && game.maxPlayers >= property;\n    });\n    if (filterGames.length === 0) {\n      this.setState({ filteredGames: null })\n    } else {\n      this.setState({\n        filteredGames: filterGames\n      });\n    }\n  }\n\n\n  filterAllCardsByType(value, property) {\n    let filterGames = this.state.games.filter(game => {\n      return game[value].includes(property);\n    });\n    if (filterGames.length > 0) {\n      this.setState({\n        filteredGames: filterGames\n      });    \n    }\n  }\n\n  filterFilteredCards(value, property) {\n    let filterGames = this.state.filteredGames.filter(game => {\n      return game[value] === property;\n    });\n    if (filterGames.length === 0) {\n      this.setState({ filteredGames: null })\n    } else {\n      this.setState({\n        filteredGames: filterGames\n      });\n    }\n  }\n\n  filterFilteredCardsByType(value, property) {\n    let filterGames = this.state.filteredGames.filter(game => {\n      return game[value].includes(property);\n    })\n    if (filterGames.length === 0) {\n      this.setState({filteredGames: null});\n    } else {\n      this.setState({\n        filteredGames: filterGames\n      });\n    }\n  }\n\n  playerFilter(numOfPlayers) {\n    let playerInput = numOfPlayers;\n    this.setState({\n      players: playerInput\n    });\n    this.filterAllCardsByPlayers(playerInput)\n}\n\n  weightFilter(e){\n    let weightInput = e.target.value.toLowerCase();\n    this.setState({\n      weight: weightInput\n    });\n    if(this.filteredGames !== undefined) {\n      this.filterFilteredCards(\"weight\",weightInput);\n    } else {\n      this.filterAllCards(\"weight\", weightInput);\n    }\n  }\n\n  gameTypeFilter(e) {\n    let gameTypeInput = e.target.value.toLowerCase();\n    this.setState({\n      gameType: gameTypeInput\n    });\n    if (this.state.filteredGames.length > 0) {\n      this.filterAllCardsByType(\"type\",gameTypeInput)\n    } else {\n      this.filterFilteredCardsByType(\"type\", gameTypeInput)\n    }\n  }\n\n  foodFilter() {\n    let filteredLocations = this.state.locations.filter(location => location.hasFood === true);\n    this.setState({\n      filteredLocations: filteredLocations\n    });\n  }\n\n  drinkFilter() {\n    let filteredLocations = this.state.locations.filter(location => location.hasDrinks === true);\n    this.setState({\n      filteredLocations: filteredLocations\n    });\n  }\n\n  sellerFilter() {\n    let filteredLocations = this.state.locations.filter(location => location.sellsGames === true);\n    this.setState({\n      filteredLocations: filteredLocations\n    });\n  }\n\n  bringGameFilter() {\n    let filteredLocations = this.state.locations.filter(location => location.bringYourOwnGame === true);\n    this.setState({\n      filteredLocations: filteredLocations\n    });\n  }\n\n  filterFavorites() {\n    let filteredLocations = [];\n    let newLocation;\n    this.state.favorites.forEach(fav => {\n      newLocation = this.state.locations.find(location => {\n        return location.name === fav\n      });\n      filteredLocations.push(newLocation);\n    })\n    this.setState({\n      filteredLocations : filteredLocations\n    });\n  }\n\n\n  render() {\n    let cardArea = this.state.games.length ?\n      <CardArea\n        gamesData={ this.state.filteredGames }\n        locationData={ this.state.filteredLocations }\n        playerFilter={ this.playerFilter }\n        weightFilter={ this.weightFilter }\n        gameTypeFilter={ this.gameTypeFilter }\n        foodFilter={ this.foodFilter }\n        drinkFilter={ this.drinkFilter }\n        sellerFilter={ this.sellerFilter }\n        bringGameFilter={ this.bringGameFilter }\n        favorites={ this.state.favorites }\n        searchByText={ this.searchByText }\n        toggleFav={ this.toggleFav }\n        filterFavorites={ this.filterFavorites } \n        />\n      : 'Loading...';\n\n    return (\n      <div className=\"App\">\n        <Header header={Header} />\n        {cardArea}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}